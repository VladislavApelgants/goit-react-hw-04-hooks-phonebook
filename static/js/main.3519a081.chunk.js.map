{"version":3,"sources":["components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","hooks/useLocalStorage.js","components/App/App.js","index.js","components/ContactList/ContactList.module.scss","components/App/App.module.scss","components/Form/Form.module.scss"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","inputChange","e","currentTarget","value","console","log","preventDefault","target","className","s","form","type","pattern","title","required","onChange","btnSend","ContactList","data","contact__list","map","contact__item","contact__name","contact__number","contact__button","onClick","id","Filter","popTypes","PropTypes","string","isRequired","func","useLocalStorage","key","defaultState","JSON","parse","localStorage","getItem","state","setState","useEffect","window","setItem","stringify","App","contacts","setContacts","filter","setFilter","phonebook","find","contact","prevContacts","uuidv4","alert","containerOverflow","length","lowerCase","toLowerCase","includes","getFiltered","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3519a081.chunk.js","sourcesContent":["import { useState } from 'react';\nimport s from './Form.module.scss';\nimport PropTypes from 'prop-types';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('Упс, при вводе что-то пошло не так');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    onSubmit(name, number);\n    reset();\n  };\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label>\n        <span>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={inputChange}\n        />\n      </label>\n      <label>\n        <span>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={inputChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.btnSend}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import s from './ContactList.module.scss';\nimport PropTypes from 'prop-types';\n\nexport default function ContactList({ data, onChange }) {\n  return (\n    <ul className={s.contact__list}>\n      {data.map(e => (\n        <li key={e.id} className={s.contact__item}>\n          <span className={s.contact__name}>{e.name}:</span>\n          <span className={s.contact__number}>{e.number}</span>\n          <button\n            type=\"button\"\n            className={s.contact__button}\n            onClick={() => onChange(e.id)}\n          >\n            D\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  data: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label>\n      Filter by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.popTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultState) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(localStorage.getItem(key) ?? defaultState);\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n};\nexport default useLocalStorage;\n","import React, { useState } from 'react';\nimport s from './App.module.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from '../Form';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport useLocalStorage from '../../hooks/useLocalStorage';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', '');\n  const [filter, setFilter] = useState('');\n\n  function formSubmit(name, number) {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in the contacts`);\n      return;\n    }\n    return setContacts(prevContacts => [\n      { name, number, id: uuidv4() },\n      ...prevContacts,\n    ]);\n  }\n\n  function del(e) {\n    setContacts(contacts.filter(contact => contact.id !== e));\n  }\n\n  function getFiltered() {\n    const lowerCase = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerCase),\n    );\n  }\n\n  function filt(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'filter':\n        setFilter(value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  return (\n    <div className={s.phonebook}>\n      <h1 className={s.title}>Phonebook</h1>\n      <Form onSubmit={formSubmit} />\n      <div className=\"contacts\">\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={filter} onChange={filt} />\n        <div className={s.containerOverflow}>\n          {contacts.length !== 0 ? (\n            <ContactList data={getFiltered()} onChange={del} />\n          ) : (\n            <p>There is nothing here yet</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"ContactList_contact__list__3JAIS\",\"contact__item\":\"ContactList_contact__item__Bxlrc\",\"contact__number\":\"ContactList_contact__number__32Qwy\",\"contact__button\":\"ContactList_contact__button__1ggPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__2XvLf\",\"title\":\"App_title__1XfS-\",\"containerOverflow\":\"App_containerOverflow__36SqO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__yDq9-\",\"btnSend\":\"Form_btnSend__3Lr1r\"};"],"sourceRoot":""}